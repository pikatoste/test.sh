name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: make
      - name: Run tests
        run: make check
      - name: Publish test output
        uses: actions/upload-artifact@v1
        with:
          name: testout
          path: runtest/test/testout
      - name: Install requirements for coverage
        run: |
          sudo apt install ruby
          sudo gem install bashcov
      - name: Generate code coverage report
        run: make coverage
      - name: Publish code coverage report
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: runtest/coverage

  coverage_badge:

    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Download coverage report artifact
        uses: actions/download-artifact@v1
        with:
          name: coverage
          path: runtest/coverage
      - name: Generate coverage badge from report
        run: |
          sudo apt install xsltproc
          COVERAGE=$(sed -n '/<tbody>/,/<\/tbody>/p;/<\/tbody>/q' runtest/coverage/index.html | xsltproc tools/coverage.xsl -)
          COVERAGE_COLOR=$(echo "$COVERAGE" | awk '{if ($1 <= 80) print "red"; else if ($1 < 90) print "yellow"; else print "brightgreen"}')
          COVERAGE_URLENC=$(echo -n "$COVERAGE" | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')
          curl -X GET "https://img.shields.io/badge/coverage-${COVERAGE_URLENC}-${COVERAGE_COLOR}" >/tmp/coverage.svg
      - name: Upload coverage badge
        run: |
          git config user.email "ci@nowhere.org"
          git config user.name "ci"
          git checkout --orphan assets || git checkout assets
          make clean
          git reset --hard
          cp /tmp/coverage.svg .
          git add .
          git commit -m 'Updated coverage badge'
          git push -u origin assets --force
      - name: Switch to gh-pages branch
        run: |
          git checkout --orphan gh-pages
          git pull origin gh-pages
      - name: Download coverage report artifact
        uses: actions/download-artifact@v1
        with:
          name: coverage
          path: coverage
      - name: Publish coverage report
        run: |
          git config user.email "ci@nowhere.org"
          git config user.name "ci"
          git add coverage
          git commit -m "Update coverage report"
          git push --set-upstream origin gh-pages
