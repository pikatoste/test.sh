name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: make
      - name: Run tests
        run: make check
      - name: Publish test output
        uses: actions/upload-artifact@v1
        with:
          name: testout
          path: runtest/test/testout
      - name: Install requirements for coverage
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt install ruby
          sudo gem install bashcov
      - name: Generate and fix code coverage report
        run: |
          make coverage
          sed -i -e "s#type='text/css'>#type='text/css'/>#" runtest/coverage/index.html
      - name: Publish code coverage report
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: runtest/coverage
      - name: Generate version
        run: |
          tools/generate-version.sh >build/version
      - name: Save version artifact
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: build/version


  coverage:

    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Save tools folder
        run: cp -a tools /tmp
      - name: Download coverage report artifact
        uses: actions/download-artifact@v1
        with:
          name: coverage
          path: runtest/coverage
      - name: Generate coverage badge from report
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt install xsltproc
          tools/generate-coverage-badge.sh >/tmp/coverage.svg
      - name: Upload coverage badge
        run: |
          git config user.email "ci@nowhere.org"
          git config user.name "ci"
          git checkout --orphan assets || git checkout assets
          make clean
          git reset --hard
          cp /tmp/coverage.svg .
          git add .
          git commit -m 'Updated coverage badge'
          git push -u origin assets --force
      - name: Switch to gh-pages branch
        run: |
          git checkout --orphan gh-pages
          git reset --hard
          git pull origin gh-pages
      - name: Download coverage report artifact
        uses: actions/download-artifact@v1
        with:
          name: coverage
          path: coverage
      - name: Download version artifact
        uses: actions/download-artifact@v1
        with:
          name: version
          path: build
      - name: Publish coverage report
        run: |
          git config user.email "ci@nowhere.org"
          git config user.name "ci"
          /tmp/tools/jekyllize.sh coverage/index.html
          sed -i -e "s/Version:.*$/Version: $(cat build/version)/" index.md
          git add coverage index.md
          git commit -m "Update coverage report"
          git push --set-upstream origin gh-pages
